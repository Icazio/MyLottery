<?xml version="1.0" encoding="UTF-8"?>
<!--这是一个 MyBatis 的 Mapper XML 文件，用于将 SQL 语句与 Java 接口中的方法映射起来，实现数据访问操作-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.icarus.lottery.infrastructure.dao.IActivityDao">
<!--<mapper> 标签指定了这个 XML 文件是 MyBatis 的 Mapper 配置文件。
namespace 属性指定了这个 Mapper 对应的 Java 接口，这里是 cn.icarus.lottery.infrastructure.dao.IActivityDao。-->

    <resultMap id="activity" type="cn.icarus.lottery.infrastructure.po.Activity">
        <!--<resultMap> 标签用于定义一个名为activity的结果映射，它将 Activity 表的各个字段与 Activity 对象的属性进行了映射关联。
        id 属性指定了这个结果映射的名称，这里是 activity。
        type 属性指定了映射的目标 Java 类型，这里是 cn.icarus.lottery.infrastructure.po.Activity。-->

        <id column="id" property="id"/>
        <!--<id> 标签指定了主键字段 id 与对应的 Activity 对象属性 id 之间的映射关系。
        column 属性指定了数据库中对应的列名，property 属性指定了 Java 对象中对应的属性名。-->

        <!--<result> 标签用于定义一个普通列，将其映射到 Activity 对象的属性上。-->
        <result column="activity_id" property="activityId"/>
        <result column="activity_name" property="activityName"/>
        <result column="activity_desc" property="activityDesc"/>
        <result column="begin_date_time" property="beginDateTime"/>
        <result column="end_date_time" property="endDateTime"/>
        <result column="stock_count" property="stockCount"/>
        <result column="take_count" property="takeCount"/>
        <result column="state" property="state"/>
        <result column="creator" property="creator"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!--<insert> 标签定义了一个名为 insert 的 SQL 语句，用于向 Activity 表中插入一条记录。
parameterType 属性指定了该 SQL 语句接受的参数类型为 cn.icarus.lottery.infrastructure.po.Activity。-->
    <insert id="insert" parameterType="cn.icarus.lottery.infrastructure.po.Activity">
        INSERT INTO activity
        (activity_id, activity_name, activity_desc, begin_date_time, end_date_time,
         stock_count, take_count, state, creator, create_time, update_time)
        VALUES
            (#{activityId}, #{activityName}, #{activityDesc}, #{beginDateTime}, #{endDateTime},
             #{stockCount}, #{takeCount}, #{state}, #{creator}, now(), now())
    </insert>

    <update id="alterState" parameterType="cn.icarus.lottery.domain.activity.model.vo.AlterStateVO">
        UPDATE activity
        SET state = #{afterState}
        WHERE activity_id = #{activityId} AND state = #{beforeState}
    </update>

    <!--<select> 标签定义了一个名为 queryActivityById 的 SQL 语句，用于根据 activity_id 查询一条 Activity 记录。
    parameterType 属性指定了该 SQL 语句接受的参数类型为 java.lang.Long。-->
    <select id="queryActivityById" parameterType="java.lang.Long" resultMap="activity">
        SELECT activity_id, activity_name, activity_desc, begin_date_time, end_date_time,
               stock_count, take_count, state, creator, create_time, update_time
        FROM activity
        WHERE activity_id = #{activityId}
    </select>

    <!--SQL 语句中使用了 MyBatis 的占位符 #{}，将 Activity 对象的属性值填充到 SQL 语句中。-->
</mapper>

<!--这是一个 MyBatis 的 Mapper XML 文件，用于将 SQL 语句与 Java 接口中的方法映射起来，实现数据访问操作。

<mapper> 标签指定了这个 XML 文件是 MyBatis 的 Mapper 配置文件。
namespace 属性指定了这个 Mapper 对应的 Java 接口，这里是 cn.icarus.lottery.infrastructure.dao.IActivityDao。

<resultMap> 标签用于定义一个名为activity的结果映射，它将 Activity 表的各个字段与 Activity 对象的属性进行了映射关联。
id 属性指定了这个结果映射的名称，这里是 activity。
type 属性指定了映射的目标 Java 类型，这里是 cn.icarus.lottery.infrastructure.po.Activity。

<id> 标签指定了主键字段 id 与对应的 Activity 对象属性 id 之间的映射关系。
column 属性指定了数据库中对应的列名，property 属性指定了 Java 对象中对应的属性名。

<result> 标签用于定义一个普通列，将其映射到 Activity 对象的属性上。

<insert> 标签定义了一个名为 insert 的 SQL 语句，用于向 Activity 表中插入一条记录。
parameterType 属性指定了该 SQL 语句接受的参数类型为 cn.icarus.lottery.infrastructure.po.Activity。

SQL 语句中使用了 MyBatis 的占位符 #{}，将 Activity 对象的属性值填充到 SQL 语句中。

<select> 标签定义了一个名为 queryActivityById 的 SQL 语句，用于根据 activity_id 查询一条 Activity 记录。
parameterType 属性指定了该 SQL 语句接受的参数类型为 java.lang.Long。
resultMap 属性指定了查询结果应该被映射到哪个结果映射对象上，这里使用了上面定义的 activity 映射。

-->